{"version":3,"sources":["pages/Dashboard.js","pages/LoginPage.js","pages/SignUpPage.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Header","NavigationBox","NavigationBar","p","one","css","two","three","ComponentsContainer","LiveInfoContainer","LiveInfo","CatagorysContainer","CatagorysHeader","h3","CatagoryItemsContainer","CatagoryItem","CatagoryText","BarContainer","FullBar","HalfBar","TasksContainer","Task","TaskCatagory","Status","TaskTitle","TaskAssign","TaskTime","Dashboard","class","h1","input","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c96c10c.chunk.js","sourcesContent":["import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Container = styled.div`\n  background: #ffffff;\n`;\nconst Header = styled.div`\n  height: 200px;\n  width: 100%;\n  background-image: linear-gradient(\n      rgba(107, 109, 184, 0.9),\n      rgba(107, 109, 184, 0.9)\n    ),\n    url(\"images/Header.jpg\");\n  background-position: center;\n  background-size: cover;\n  padding: 0 25px;\n  padding-top: 35px;\n`;\nconst NavigationBox = styled.div`\n  width: 35px;\n  height: 22px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-end;\n  margin-left: auto;\n  cursor: pointer;\n  /* margin-top: 43px; */\n`;\nconst NavigationBar = styled.div`\n  display: inline-block;\n  height: 5px;\n  border-radius: 5px;\n\n  background: #f7f7f7;\n  ${(p) =>\n    p.one &&\n    css`\n      width: 100%;\n    `}\n  ${(p) =>\n    p.two &&\n    css`\n      width: 50%;\n    `}\n    ${(p) =>\n    p.three &&\n    css`\n      width: 35%;\n    `}\n`;\nconst ComponentsContainer = styled.div`\n  padding: 0 25px;\n  display: flex;\n  flex-direction: column;\n  margin-top: -37.5px;\n  gap: 1em;\n`;\nconst LiveInfoContainer = styled.div`\n  height: 75px;\n  background: #f7f7f7;\n  border-radius: 5px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\nconst LiveInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0px;\n  h3 {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 800;\n    font-size: 18.75px;\n    color: #000000;\n  }\n  p {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 15px;\n    color: #818181;\n  }\n`;\n\nconst CatagorysContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1em;\n`;\nconst CatagorysHeader = styled.h3`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 18px;\n  text-transform: capitalize;\n  color: #818181;\n  text-align: start;\n`;\nconst CatagoryItemsContainer = styled.div`\n  display: flex;\n  /* justify-content: space-between; */\n`;\nconst CatagoryItem = styled.div`\n  width: 177px;\n  background: #f7f7f7;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 10px;\n  height: 100px;\n\n  &:not(last-child) {\n    margin-right: 8px;\n  }\n`;\nconst CatagoryText = styled.div`\n  text-align: start;\n  display: inline-block;\n\n  p {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 15px;\n    color: #818181;\n    margin-bottom: 0.5em;\n  }\n  h3 {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 15px;\n    line-height: 18px;\n    text-transform: capitalize;\n    color: #000000;\n  }\n`;\nconst BarContainer = styled.div`\n  position: relative;\n`;\nconst FullBar = styled.div`\n  position: absolute;\n  z-index: 1;\n  height: 5px;\n  width: 100%;\n  border-radius: 10px;\n  background: #818181;\n`;\nconst HalfBar = styled.div`\n  position: absolute;\n  z-index: 2;\n  height: 5px;\n  width: 50%;\n  border-radius: 10px;\n  background: #20cfb1;\n`;\nconst TasksContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 1.3em;\n`;\nconst Task = styled.div`\n  width: 100%;\n  /* height: 100px; */\n  border-radius: 10px;\n  background: #f7f7f7;\n  position: relative;\n  padding: 10px 0;\n  padding-left: 25px;\n  padding-right: 15px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, max-content);\n  grid-template-areas:\n    \"catagory . status\"\n    \"title title title\"\n    \"assign assign time\";\n  grid-row-gap: 0.8em;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 10px;\n    background: #0fbd97;\n    border-radius: 10px 0px 0px 10px;\n  }\n`;\nconst TaskCatagory = styled.p`\n  grid-area: catagory;\n  display: inline-block;\n  text-align: start;\n  color: #818181;\n\n  i {\n    height: 15px;\n    width: 15px;\n    color: #818181;\n    margin-right: 0.5em;\n  }\n`;\nconst Status = styled.div`\n  grid-area: status;\n  display: flex;\n  align-items: center;\n  justify-content: end;\n  div {\n    height: 4px;\n    width: 4px;\n    background: #0fbd97;\n    border-radius: 50px;\n    margin-right: 0.5em;\n  }\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 15px;\n  text-transform: uppercase;\n\n  color: #818181;\n`;\nconst TaskTitle = styled.p`\n  text-align: start;\n  grid-area: title;\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 15px;\n  line-height: 18px;\n  text-transform: capitalize;\n\n  color: #4f4f4f;\n`;\nconst TaskAssign = styled.p`\n  text-align: start;\n  grid-area: assign;\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 12px;\n  line-height: 15px;\n  /* identical to box height */\n  text-transform: capitalize;\n  display: flex;\n  gap: 0.3em;\n  align-items: center;\n  p {\n    display: inline-block;\n  }\n\n  color: #818181;\n  span {\n    color: #4f4f4f;\n    display: flex;\n    align-items: center;\n    gap: 0.4em;\n\n    p {\n      display: inline-block;\n    }\n    i {\n      transform: translateY(-15%);\n    }\n  }\n`;\n\nconst TaskTime = styled.div`\n  grid-area: time;\n  p {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 15px;\n    /* identical to box height */\n    text-transform: lowercase;\n    font-family: Inter;\n    font-size: 12px;\n    text-align: right;\n\n    color: #818181;\n  }\n`;\n\nconst Dashboard = () => {\n  return (\n    <Container>\n      <Header>\n        <NavigationBox>\n          <NavigationBar one />\n          <NavigationBar two />\n          <NavigationBar three />\n        </NavigationBox>\n      </Header>\n      <ComponentsContainer>\n        <LiveInfoContainer>\n          <LiveInfo>\n            <h1>709</h1>\n            <p>Passed</p>\n          </LiveInfo>\n          <LiveInfo>\n            <h1>709</h1>\n            <p>Todo</p>\n          </LiveInfo>\n          <LiveInfo>\n            <h1>709</h1>\n            <p>Completed</p>\n          </LiveInfo>\n          <LiveInfo>\n            <h1>709</h1>\n            <p>Due Today</p>\n          </LiveInfo>\n        </LiveInfoContainer>\n        <CatagorysContainer>\n          <CatagorysHeader>Catagorys</CatagorysHeader>\n          <CatagoryItemsContainer>\n            <CatagoryItem>\n              <CatagoryText>\n                <p>40 Tasks</p>\n                <h3>Buisness</h3>\n              </CatagoryText>\n              <BarContainer>\n                <FullBar />\n                <HalfBar />\n              </BarContainer>\n            </CatagoryItem>\n            <CatagoryItem>\n              <CatagoryText>\n                <p>40 Tasks</p>\n                <h3>Personal</h3>\n              </CatagoryText>\n              <BarContainer>\n                <FullBar />\n                <HalfBar />\n              </BarContainer>\n            </CatagoryItem>\n          </CatagoryItemsContainer>\n        </CatagorysContainer>\n        <TasksContainer>\n          <Task>\n            <TaskCatagory>\n              <i class='fas fa-tools'></i>\n              Bugs\n            </TaskCatagory>\n            <Status>\n              <div />\n              incomplete\n            </Status>\n            <TaskTitle>code the users route for new website</TaskTitle>\n            <TaskAssign>\n              <p>Assigned to: </p>\n\n              <span>\n                <p>Save</p> <i class='fas fa-sort-down'></i>\n              </span>\n            </TaskAssign>\n            <TaskTime>\n              <p>2m</p>\n            </TaskTime>\n          </Task>\n          <Task>\n            <TaskCatagory>\n              <i class='fas fa-user-friends'></i>\n              Bugs\n            </TaskCatagory>\n            <Status>\n              <div />\n              incomplete\n            </Status>\n            <TaskTitle>code the users route for new website</TaskTitle>\n            <TaskAssign>\n              <p>Assigned to: </p>\n\n              <span>\n                <p>Save</p> <i class='fas fa-sort-down'></i>\n              </span>\n            </TaskAssign>\n            <TaskTime>\n              <p>2m</p>\n            </TaskTime>\n          </Task>\n          <Task>\n            <TaskCatagory>\n              <i class='fas fa-archive'></i>\n              Bugs\n            </TaskCatagory>\n            <Status>\n              <div />\n              incomplete\n            </Status>\n            <TaskTitle>code the users route for new website</TaskTitle>\n            <TaskAssign>\n              <p>Assigned to: </p>\n\n              <span>\n                <p>Save</p> <i class='fas fa-sort-down'></i>\n              </span>\n            </TaskAssign>\n            <TaskTime>\n              <p>2m</p>\n            </TaskTime>\n          </Task>\n          <Task>\n            <TaskCatagory>\n              <i class='fas fa-lock'></i>\n              Bugs\n            </TaskCatagory>\n            <Status>\n              <div />\n              incomplete\n            </Status>\n            <TaskTitle>code the users route for new website</TaskTitle>\n            <TaskAssign>\n              <p>Assigned to: </p>\n\n              <span>\n                <p>Save</p> <i class='fas fa-sort-down'></i>\n              </span>\n            </TaskAssign>\n            <TaskTime>\n              <p>2m</p>\n            </TaskTime>\n          </Task>\n        </TasksContainer>\n      </ComponentsContainer>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background: linear-gradient(180deg, #20cfb1 0%, #6b6db8 67.71%);\n  padding: 0 25px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst LoginContainer = styled.div`\n  width: 100%;\n  background: #f7f7f7;\n  height: 304px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px 10px;\n  justify-content: space-between;\n`;\nconst Header = styled.h1`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 30px;\n  line-height: 36px;\n  text-transform: capitalize;\n  color: #000000;\n`;\nconst InputsContainer = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  gap: 2em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Input = styled.input`\n  padding: 0.3em 0.3em;\n  font-size: 15px;\n  border: none;\n  border-bottom: 1.5px solid #20cfb1;\n  text-transform: capitalize;\n  display: inline-block;\n\n  width: 65%;\n  background: transparent;\n\n  &:focus {\n    outline: none;\n  }\n`;\nconst Button = styled.p`\n  display: inline-block;\n  font-family: Inter;\n  font-size: 15px;\n  text-transform: capitalize;\n  padding: 0.53em 2.8em;\n  background: #6b6db8;\n  border-radius: 10px;\n  color: #ededed;\n`;\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <LoginContainer>\n        <Header>Login</Header>\n        <InputsContainer>\n          <Input type='text' placeholder='name:' />\n          <Input type='password' placeholder='password:' />\n        </InputsContainer>\n        <div>\n          <Button>Log in</Button>\n        </div>\n      </LoginContainer>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  background: linear-gradient(180deg, #20cfb1 0%, #6b6db8 67.71%);\n  padding: 0 25px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst LoginContainer = styled.div`\n  width: 100%;\n  background: #f7f7f7;\n  height: 304px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px 10px;\n  justify-content: space-between;\n`;\nconst Header = styled.h1`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 30px;\n  line-height: 36px;\n  text-transform: capitalize;\n  color: #000000;\n`;\nconst InputsContainer = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Input = styled.input`\n  padding: 0.3em 0.3em;\n  font-size: 15px;\n  border: none;\n  border-bottom: 1.5px solid #20cfb1;\n  text-transform: capitalize;\n  display: inline-block;\n\n  width: 65%;\n  background: transparent;\n\n  &:focus {\n    outline: none;\n  }\n`;\nconst Button = styled.p`\n  display: inline-block;\n  font-family: Inter;\n  font-size: 15px;\n  text-transform: capitalize;\n  padding: 0.53em 2.8em;\n  background: #6b6db8;\n  border-radius: 10px;\n  color: #ededed;\n`;\n\nconst SignUpPage = () => {\n  return (\n    <Container>\n      <LoginContainer>\n        <Header>sign up</Header>\n        <InputsContainer>\n          <Input type='text' placeholder='name:' />\n          <Input type='email' placeholder='Email:' />\n          <Input type='password' placeholder='password:' />\n        </InputsContainer>\n        <div>\n          <Button>Log in</Button>\n        </div>\n      </LoginContainer>\n    </Container>\n  );\n};\n\nexport default SignUpPage;\n","import \"./App.css\";\nimport Dashboard from \"./pages/Dashboard\";\nimport LoginPage from \"./pages/LoginPage\";\nimport SignUpPage from \"./pages/SignUpPage\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}